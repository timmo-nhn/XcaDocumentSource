@page "/"
@using XcaXds.Commons
@using XcaXds.Commons.Models

<div class="row">
    <div class="col-md-5 col-sm-12">
        <AutoComplete @bind-Value="customerName"
        TItem="KeyValueEntry"
        DataProvider="CustomersDataProvider"
        PropertyName="Value"
        Placeholder="Search a customer..." />
    </div>
</div>

@code {
    private string? customerName;
    private IEnumerable<KeyValueEntry>? customers;

    private async Task<AutoCompleteDataProviderResult<KeyValueEntry>> CustomersDataProvider(AutoCompleteDataProviderRequest<KeyValueEntry> request)
    {
        if (customers is null)
            customers = GetCustomers(); // Fetch customers once

        var filteredCustomers = customers
            .Where(c => c.Value.Contains(request.Filter.Value ?? "", StringComparison.OrdinalIgnoreCase));

        return await Task.FromResult(new AutoCompleteDataProviderResult<KeyValueEntry>
        {
            Data = filteredCustomers
        });
    }

    private IEnumerable<KeyValueEntry> GetCustomers()
    {
        var storedQueryTypes = typeof(Constants.Xds.QueryParameters.FindDocuments).GetAsKeyValuePair();

        // Jank?!
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.FindSubmissionSets).GetAsKeyValuePair()];
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.Folder).GetAsKeyValuePair()];
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.GetFolders).GetAsKeyValuePair()];
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.GetFolderAndContents).GetAsKeyValuePair()];
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.Associations).GetAsKeyValuePair()];
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.General).GetAsKeyValuePair()];
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.GetAll).GetAsKeyValuePair()];
        storedQueryTypes = [..storedQueryTypes, ..typeof(Constants.Xds.QueryParameters.GetDocuments).GetAsKeyValuePair()];

        var uniqueStoredQueryTypes = storedQueryTypes
        .Select(sqt => new KeyValueEntry() { Key = sqt.Key, Value = sqt.Value })
        .DistinctBy(entry => entry.Value);

        return uniqueStoredQueryTypes;
    }
}
