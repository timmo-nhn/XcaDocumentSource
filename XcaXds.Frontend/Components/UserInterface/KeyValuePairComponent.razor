@using XcaXds.Frontend.Models;

<div>
    @foreach (var pair in KeyValuePairs.Select((pair, index) => new { pair, index }))
    {
            <div class="form-group">
                <InputText class="form-control mb-2" @bind-Value="pair.pair.Key" @onblur="AddKeyValuePair" placeholder="Key" />
                <InputText class="form-control mb-2" @bind-Value="pair.pair.Value" @onblur="AddKeyValuePair" placeholder="Value" />
                <button class="btn btn-danger" @onclick="() => RemoveKeyValuePair(pair.index)">Remove</button>
            </div>
    }
    <button class="btn btn-primary" @onclick="AddKeyValuePair">Add</button>
</div>

@code {


    [Parameter]
    public List<KeyValueEntry> KeyValuePairs { get; set; } = new();

    [Parameter]
    public EventCallback<List<KeyValueEntry>> KeyValuePairsChanged { get; set; }

    private void OnKeyValueChanged()
    {
        KeyValuePairsChanged.InvokeAsync(KeyValuePairs);
    }

    private void AddKeyValuePair()
    {
        KeyValuePairs.Add(new KeyValueEntry()); // Mutable object
    }

    private void RemoveKeyValuePair(int index)
    {
        if (KeyValuePairs.Count > 1)
        {
            KeyValuePairs.RemoveAt(index);
        }
    }

    protected override void OnInitialized()
    {
        KeyValuePairs.Add(new KeyValueEntry()); // Start with one empty entry
    }
}
