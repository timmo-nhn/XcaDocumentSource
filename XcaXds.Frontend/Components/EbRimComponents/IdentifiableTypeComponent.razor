@using XcaXds.Commons.Models;
@using XcaXds.Commons.Models.Soap.XdsTypes;
@using XcaXds.Commons.Models.Soap;
@using XcaXds.Commons.Services
@using XcaXds.Frontend.Components.EbRimComponents;


<div class="ebrim-card external-identifier-card">
    <div class="ebrim-header identifiable-type-header">
        RegistryObjectList
    </div>
    <div class="ebrim-body">
        @foreach (var type in IdentifiableType)
        {
            <DynamicComponent Type="@GetComponentType(type)"
                              Parameters="@(new Dictionary<string, object> { [GetComponentType(type).Name.Replace("Component","")] = type })" />
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public IdentifiableType[] IdentifiableType { get; set; }

    private Type GetComponentType(IdentifiableType item)
    {

        var type = item switch
        {
            AssociationType => typeof(AssociationComponent),
            ClassificationType => typeof(ClassificationComponent),
            ExternalIdentifierType => typeof(ExternalIdentifierComponent),
            ExtrinsicObjectType => typeof(ExtrinsicObjectComponent),
            RegistryPackageType => typeof(RegistryPackageComponent),
            _ => typeof(IdentifiableTypeComponent) // Fallback for unknown types
        };

        var gobb = type.Name.Replace("Component","");

        return type;
    }

}
